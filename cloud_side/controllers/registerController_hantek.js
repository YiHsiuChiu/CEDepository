let MongoClient = require('mongodb').MongoClient;
let url = process.env["MONGODB_URL"];
crypto = require('crypto');
const { v4: uuidv4 } = require('uuid');
let Web3 = require('web3')
// let web3 = new Web3("http://127.0.0.1:8545");
let web3 = new Web3(new Web3.providers.HttpProvider("http://trailsblockrpc1.kkservice.cc:8502"));
const EthereumTx = require('ethereumjs-tx').Transaction;
const Common = require('ethereumjs-common').default;
var privateKey = new Buffer(process.env["BLOCKCHAIN_ACCOUNT_PrivKey"], 'hex')


const abi = [
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "string",
				"name": "data",
				"type": "string"
			}
		],
		"name": "FetchData",
		"type": "event"
	},
	{
		"inputs": [],
		"name": "readData",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "readID",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "input",
				"type": "string"
			}
		],
		"name": "writeData",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "input",
				"type": "string"
			}
		],
		"name": "writeID",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

const bytecode = {
	"generatedSources": [],
	"linkReferences": {},
	"object": "608060405234801561001057600080fd5b5061066f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063134bc876146100515780639a5d16311461006d578063bef55ef31461008b578063fb04a475146100a9575b600080fd5b61006b60048036038101906100669190610360565b6100c5565b005b610075610117565b604051610082919061045a565b60405180910390f35b6100936101a9565b6040516100a0919061045a565b60405180910390f35b6100c360048036038101906100be9190610360565b61023b565b005b80600190805190602001906100db929190610255565b507f8fa7742a0f8222f0636e84495938c08309be2e9a848748c2204b1d8af4084218600160405161010c919061047c565b60405180910390a150565b60606000805461012690610567565b80601f016020809104026020016040519081016040528092919081815260200182805461015290610567565b801561019f5780601f106101745761010080835404028352916020019161019f565b820191906000526020600020905b81548152906001019060200180831161018257829003601f168201915b5050505050905090565b6060600180546101b890610567565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610567565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b5050505050905090565b8060009080519060200190610251929190610255565b5050565b82805461026190610567565b90600052602060002090601f01602090048101928261028357600085556102ca565b82601f1061029c57805160ff19168380011785556102ca565b828001600101855582156102ca579182015b828111156102c95782518255916020019190600101906102ae565b5b5090506102d791906102db565b5090565b5b808211156102f45760008160009055506001016102dc565b5090565b600061030b610306846104c3565b61049e565b90508281526020810184848401111561032357600080fd5b61032e848285610525565b509392505050565b600082601f83011261034757600080fd5b81356103578482602086016102f8565b91505092915050565b60006020828403121561037257600080fd5b600082013567ffffffffffffffff81111561038c57600080fd5b61039884828501610336565b91505092915050565b60006103ac82610509565b6103b68185610514565b93506103c6818560208601610534565b6103cf81610628565b840191505092915050565b600081546103e781610567565b6103f18186610514565b9450600182166000811461040c576001811461041e57610451565b60ff1983168652602086019350610451565b610427856104f4565b60005b838110156104495781548189015260018201915060208101905061042a565b808801955050505b50505092915050565b6000602082019050818103600083015261047481846103a1565b905092915050565b6000602082019050818103600083015261049681846103da565b905092915050565b60006104a86104b9565b90506104b48282610599565b919050565b6000604051905090565b600067ffffffffffffffff8211156104de576104dd6105f9565b5b6104e782610628565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b83811015610552578082015181840152602081019050610537565b83811115610561576000848401525b50505050565b6000600282049050600182168061057f57607f821691505b60208210811415610593576105926105ca565b5b50919050565b6105a282610628565b810181811067ffffffffffffffff821117156105c1576105c06105f9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea26469706673582212203dd4b06edf7f2b0fd5c3ca2c784d062c5f40562a8b85820f504e2f4636e68d2764736f6c63430008040033",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x134BC876 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x9A5D1631 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xBEF55EF3 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xFB04A475 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xDB SWAP3 SWAP2 SWAP1 PUSH2 0x255 JUMP JUMPDEST POP PUSH32 0x8FA7742A0F8222F0636E84495938C08309BE2E9A848748C2204B1D8AF4084218 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x126 SWAP1 PUSH2 0x567 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x152 SWAP1 PUSH2 0x567 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x174 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x182 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B8 SWAP1 PUSH2 0x567 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E4 SWAP1 PUSH2 0x567 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x231 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x206 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x231 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x214 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x251 SWAP3 SWAP2 SWAP1 PUSH2 0x255 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0x567 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x283 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2CA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x29C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2CA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2CA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2AE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B PUSH2 0x306 DUP5 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E DUP5 DUP3 DUP6 PUSH2 0x525 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x357 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x398 DUP5 DUP3 DUP6 ADD PUSH2 0x336 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC DUP3 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x3B6 DUP2 DUP6 PUSH2 0x514 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x628 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3E7 DUP2 PUSH2 0x567 JUMP JUMPDEST PUSH2 0x3F1 DUP2 DUP7 PUSH2 0x514 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x40C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x41E JUMPI PUSH2 0x451 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 POP PUSH2 0x451 JUMP JUMPDEST PUSH2 0x427 DUP6 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x449 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42A JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x474 DUP2 DUP5 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x496 DUP2 DUP5 PUSH2 0x3DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0x4B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B4 DUP3 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x5F9 JUMP JUMPDEST JUMPDEST PUSH2 0x4E7 DUP3 PUSH2 0x628 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x552 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x537 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x57F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP3 PUSH2 0x628 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x5F9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xD4 0xB0 PUSH15 0xDF7F2B0FD5C3CA2C784D062C5F4056 0x2A DUP12 DUP6 DUP3 0xF POP 0x4E 0x2F CHAINID CALLDATASIZE 0xE6 DUP14 0x27 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
	"sourceMap": "35:559:0:-:0;;;;;;;;;;;;;;;;;;;"
}

let contract_list = []
let db = null;

MongoClient.connect(url, { useNewUrlParser: true, useUnifiedTopology: true }, async (err, client) => {
	if (err) {
		console.log(err);
	}
	db = await client.db('hantek_CarData');
	db = db.collection('Registration')
	// for search page to judge whether the transaction is correct
	let result = await db.find({}).toArray();
	for (let obj of result) {
		contract_list.push(obj.contractAddress);
	}
	// console.log(contract_list)
});


const getCars = async (req, res) => {
	let result = await db.find({}).toArray();
	return res.status(200).json({ code: 20000, data: result })
}
const addCar = async (req, res) => {
	var newContract = new web3.eth.Contract(abi);
	let sdata = newContract.deploy({
		data: '0x' + bytecode.object,
		arguments: [
		]
	}).encodeABI();

	web3.eth.getTransactionCount('0xfccBFe26448d3Ea0739084cD09ce286189CC2cd2').then(txCount => {
		let newNonce = web3.utils.toHex(txCount);
		web3.eth.getGasPrice().then(async (gasPrice) => {
			//產生tx
			let txParams = {
				nonce: newNonce,
				gasPrice: parseInt(gasPrice),
				gas: '0xF4240',
				from: '0xfccBFe26448d3Ea0739084cD09ce286189CC2cd2',
				// value: '0xDE0B6B3A7640000',
				data: sdata,
			}
			const customCommon = Common.forCustomChain(
				'mainnet',
				{
					chainId: 27596,
					networkId: 27596,
				},
				'petersburg',
			)

			tx = new EthereumTx(txParams, { common: customCommon })
			tx.sign(privateKey);

			var raw = tx.serialize();
			// console.log(raw);
			web3.eth.sendSignedTransaction('0x' + raw.toString('hex')).then(receipt => {
				// console.log(receipt.contractAddress) // instance with the new contract address
				contract_list.push(receipt.contractAddress);
				// add a new car in MongoDB
				var newobj = {
					carAddress: req.body.carAddress,
					carID: uuidv4(),
					contractAddress: receipt.contractAddress
				}
				db.insertOne(newobj, function (err, res) {
					if (err) throw err;
					// console.log("1 document inserted");
				});

				return res.status(200).json({ code: 20000, data: newobj })

			})
		})
	})



}
const deleteCar = async (req, res) => {
	var id = req.params.id;
	var myquery = { carAddress: id };
	let result = await db.find(myquery).toArray();

	// delete contractaddress of the contract_list
	const index = contract_list.indexOf(result[0].contractAddress);
	if (index > -1) {
		contract_list.splice(index, 1);
	}
	// delete the car in MongoDB
	db.deleteOne(myquery, function (err, res) {
		if (err) throw err;
		// console.log("1 document deleted");
	})

	return res.status(200).json({ code: 20000, data: 'success' })
}

function get_contract_list() {
	return contract_list
}

module.exports = {
	getCars,
	addCar,
	deleteCar,
	get_contract_list
}
